{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"functionAppName": {
			"type": "string"
		},
		"storageAccountName": {
			"type": "string"
		},
		"cosmosDbDatabaseName": {
			"type": "string"
		},
		"azureCommunicationServicesConnectionString": {
			"type": "secureString"
		}
    },
	"resources": [
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2022-03-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[variables('location')]",
			"sku": {
				"name": "Y1",
				"tier": "Dynamic",
				"size": "Y1",
				"family": "Y",
				"capacity": 0
			},
			"properties": {
				"computeMode": "Dynamic"
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2022-03-01",
			"name": "[parameters('functionAppName')]",
			"location": "[variables('location')]",
			"kind": "functionapp",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
				"[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
				"[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbDatabaseName'))]"
			],
			"properties": {
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"siteConfig": {
					"appSettings": [
					{
						"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
						"value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            		},
					{
						"name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
						"value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').ConnectionString]"
					},
					{
						"name": "AzureWebJobsStorage",
						"value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value)]"
					},
					{
						"name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
						"value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value)]"
					},
					{
						"name": "WEBSITE_CONTENTSHARE",
						"value": "[toLower(parameters('functionAppName'))]"
					},
					{
						"name": "WEBSITE_RUN_FROM_PACKAGE",
						"value": "[variables('packageLocation')]"
					},
					{
						"name": "FUNCTIONS_EXTENSION_VERSION",
						"value": "~4"
					},
					{
						"name": "FUNCTIONS_WORKER_RUNTIME",
						"value": "dotnet-isolated"
					},
					{
						"name": "ACS:ConnectionString",
						"value": "[parameters('azureCommunicationServicesConnectionString')]"
					},
					{
						"name": "CosmosDbConfiguration:ConnectionString",
						"value": "[first(listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbDatabaseName')), '2022-08-15').connectionStrings).ConnectionString]"
					},
					{
						"name": "CosmosDbConfiguration:Database",
						"value": "[parameters('cosmosDbDatabaseName')]"
					},					
					{
						"name": "CosmosDbConfiguration:Tables:CallbackRegistrations",
						"value": "-1"
					},
					{
						"name": "CosmosDbConfiguration:Tables:CallNotifications",
						"value": "35"
					},
					{
						"name": "TokenConfiguration:Enabled",
						"value": "false"
					},
					{
						"name": "TokenConfiguration:Issuer",
						"value": ""
					},
					{
						"name": "TokenConfiguration:Secret",
						"value": ""
					},
					{
						"name": "TokenConfiguration:TimeToLiveInMinutes",
						"value": "480"
					},
					{
						"name": "NotificationSettings:EnableSendIncomingCallContext",
						"value": "true"
					},
					{
						"name": "NotificationSettings:TimeToLiveInSeconds",
						"value": "30"
					}
					]
				}
			}
		},
		{
			"type": "Microsoft.Insights/components",
			"apiVersion": "2020-02-02",
			"name": "[variables('applicationInsightsName')]",
			"location": "[variables('location')]",
			"tags": {
				"[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
			},
			"properties": {
				"Application_Type": "web"
			},
			"kind": "web"
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2021-09-01",
			"name": "[parameters('storageAccountName')]",
			"location": "[variables('location')]",
			"kind": "StorageV2",
			"properties": {
				"allowBlobPublicAccess": false
			},
			"sku": {
				"name": "Standard_LRS"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"apiVersion": "2022-08-15",
			"name": "[parameters('cosmosDbDatabaseName')]",
			"location": "[variables('location')]",
			"tags": {				
			},
			"kind": "GlobalDocumentDB",
			"properties": {
				"enableFreeTier": false,
				"databaseAccountOfferType": "Standard",
				"capabilities": [
					{
						"name": "EnableServerless"
					}
				],
				"locations": [
					{
					  "locationName": "[variables('location')]"
					}
				]
			}
		}
	],
    "variables": {
		"hostingPlanName": "[concat(parameters('functionAppName'),'-plan')]",
		"applicationInsightsName": "[concat(parameters('functionAppName'), '-insights')]",
		"location": "[resourceGroup().location]",
		"packageLocation": "https://github.com/jasonshave/CallNotificationService/blob/master/deployment/files/callnotificationservice.zip?raw=true"
    }
}